{"version":3,"file":"static/js/578.55648c6c.chunk.js","mappings":"mOAQA,MANA,SAAqBA,GACnB,OAAOC,EAAAA,EAAAA,IAAU,mDAADC,OACqCF,EAAW,6CAElE,E,SCLA,EAAwB,sBAAxB,EAA0D,0BAA1D,EAAgG,0B,SCwHhG,EA5Ge,WACb,IAAAG,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CH,EAAWK,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAA0CJ,EAAAA,EAAAA,UAAS,MAAKK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEtCG,GAA4BC,EAAAA,EAAAA,MAAiBC,GAAAR,EAAAA,EAAAA,GAAAM,EAAA,GAAtCG,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAElBG,GAAWC,EAAAA,EAAAA,MA2DXC,EAAa,WACZT,GAGLA,EAAcU,KAAI,SAAAC,GAAK,OAErBL,EAAU,CAAEM,GAAID,EAAMC,IAAK,GAE/B,EAIA,OAFAC,QAAQC,IAAIT,IAGVU,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,QAAMG,SAnCe,SAAAC,GACvBA,EAAEC,iBAEkB,KAAhB9B,GACF+B,EAAAA,GAAAA,KAAW,2BAA4B,CACrCC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAtCS,KAAhBxC,GAIJyC,EAAYzC,GACT0C,MAAK,SAAUC,GACuB,IAAjCA,EAASC,KAAKC,QAAQC,QACxBf,EAAAA,GAAAA,MAAY,qBAAsB,CAChCC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAIX7B,EAAiBgC,EAASC,KAAKC,QACjC,IACCE,OAAM,SAAUC,GACfzB,QAAQC,IAAIwB,EACd,GAsBJ,EAgBqCrB,SAAA,EAC/BsB,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EACX7B,GAAG,QACH8B,SA3EiB,SAAAvB,GACvBtB,EAAesB,EAAEwB,OAAOC,OACxBtC,EAAU,CAAEuC,MAAO1B,EAAEwB,OAAOC,OAK9B,KAsEML,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAcxB,SAAC,cAGnCjB,GACCA,EAAcU,KAAI,SAAAC,GAChB,OACE4B,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAcxB,UAC3BsB,EAAAA,EAAAA,KAAA,MAAAtB,UACEsB,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CACHC,MAAO,CAAEC,KAAMzC,GACf0C,QAASxC,EACTyC,GAAE,WAAA1D,OAAamB,EAAMC,IAAKK,SAEzBN,EAAMwC,WAPsBxC,EAAMC,GAY7C,MAGR,C","sources":["components/FetchAPIs/fetchMovies.jsx","webpack://react-homework-template/./src/components/styles/movies.module.css?b0d1","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nfunction fetchMovies(searchQuery) {\n  return axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${searchQuery}&api_key=a42bf4f31f7d8fb3cfc076b340ef7462`\n  );\n}\n\nexport default fetchMovies;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"movies_input__NHKdu\",\"searchBtn\":\"movies_searchBtn__GVkCX\",\"movieList\":\"movies_movieList__U-mld\"};","import React from 'react';\nimport { useState } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n\nimport fetchMovies from '../components/FetchAPIs/fetchMovies';\nimport { toast } from 'react-toastify';\n\nimport 'toastify-js/src/toastify.css';\n\nimport '../components/movies.css';\n\nimport css from '../components/styles/movies.module.css';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [SearchedMovie, setSearchedMovie] = useState(null);\n\n  const [params, setParams] = useSearchParams();\n\n  const location = useLocation();\n\n  const handleInputValue = e => {\n    setSearchQuery(e.target.value);\n    setParams({ query: e.target.value });\n\n    // location.state = e.target.value;\n\n    // setParams({ filter: e.target.value });\n  };\n\n  const fetchRequest = () => {\n    if (searchQuery === '') {\n      return;\n    }\n\n    fetchMovies(searchQuery)\n      .then(function (response) {\n        if (response.data.results.length === 0) {\n          toast.error('No movies found :(', {\n            position: 'top-right',\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: 'colored',\n          });\n        }\n\n        setSearchedMovie(response.data.results);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    if (searchQuery === '') {\n      toast.info('Please enter movie name!', {\n        position: 'top-right',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'colored',\n      });\n    }\n\n    fetchRequest();\n\n    // setParams({ query: input.target.value });\n  };\n\n  const getMovieId = () => {\n    if (!SearchedMovie) {\n      return;\n    }\n    SearchedMovie.map(movie =>\n      // setParams({ filter: e.target.value });\n      setParams({ id: movie.id })\n    );\n  };\n\n  console.log(params);\n\n  return (\n    <>\n      <form onSubmit={handleFormSubmit}>\n        <input\n          className={css.input}\n          id=\"input\"\n          onChange={handleInputValue}\n        ></input>\n        <button className={css.searchBtn}>Search</button>\n      </form>\n\n      {SearchedMovie &&\n        SearchedMovie.map(movie => {\n          return (\n            <ul className={css.movieList} key={movie.id}>\n              <li>\n                <Link\n                  state={{ from: location }}\n                  onClick={getMovieId}\n                  to={`/movies/${movie.id}`}\n                >\n                  {movie.title}\n                </Link>\n              </li>\n            </ul>\n          );\n        })}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["searchQuery","axios","concat","_useState","useState","_useState2","_slicedToArray","setSearchQuery","_useState3","_useState4","SearchedMovie","setSearchedMovie","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","location","useLocation","getMovieId","map","movie","id","console","log","_jsxs","_Fragment","children","onSubmit","e","preventDefault","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","fetchMovies","then","response","data","results","length","catch","error","_jsx","className","css","onChange","target","value","query","Link","state","from","onClick","to","title"],"sourceRoot":""}