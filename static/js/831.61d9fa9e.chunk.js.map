{"version":3,"file":"static/js/831.61d9fa9e.chunk.js","mappings":"2NAQA,MANA,SAAmBA,GACjB,OAAOC,EAAAA,EAAAA,IAAU,sCAADC,OACwBF,EAAO,qDAEjD,ECLA,EAA2B,uBAA3B,EAA8D,wB,SC2C9D,MApCA,WACE,IAAAG,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAChBL,GAAYS,EAAAA,EAAAA,MAAZT,QAgBR,OAVAU,EAAAA,EAAAA,YAAU,WACRC,EAAUX,GACPY,MAAK,SAAUC,GACdL,EAAUK,EAASC,KAAKC,KAC1B,IACCC,OAAM,SAAUC,GACfC,QAAQC,IAAIF,EACd,GACJ,GAAG,CAACjB,KAGFoB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGf,EAAOgB,KAAI,SAAAC,GAAK,OACfJ,EAAAA,EAAAA,KAAA,MAAAE,UACEG,EAAAA,EAAAA,MAAA,MAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,OACEM,UAAWC,EACXC,IAAG,GAAA1B,OArBI,mCAqBWA,OAAGsB,EAAMK,aAAY,aAAA3B,OAnBpC,oCAoBH4B,IAAKN,EAAMO,QAEbX,EAAAA,EAAAA,KAAA,KAAGM,UAAWC,EAAcL,SAAEE,EAAMO,QACpCN,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAcL,SAAA,CAAC,cAAYE,EAAMQ,eAPxCR,EAAMS,KADRT,EAAMS,GAUV,KAIb,C","sources":["components/FetchAPIs/FetchCast.jsx","webpack://react-homework-template/./src/components/styles/cast.module.css?3b83","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nfunction Fetchcast(movieId) {\n  return axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=a42bf4f31f7d8fb3cfc076b340ef7462`\n  );\n}\n\nexport default Fetchcast;\n","// extracted by mini-css-extract-plugin\nexport default {\"actorImg\":\"cast_actorImg__ShHgN\",\"actorText\":\"cast_actorText__J9yK+\"};","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport Fetchcast from '../FetchAPIs/FetchCast';\n\nimport css from '../../components/styles/cast.module.css';\n\nfunction Cast() {\n  const [actors, setActors] = useState([]);\n  const { movieId } = useParams();\n\n  const baseApiUrl = 'https://image.tmdb.org/t/p/w500';\n\n  const apiKey = 'a42bf4f31f7d8fb3cfc076b340ef7462';\n\n  useEffect(() => {\n    Fetchcast(movieId)\n      .then(function (response) {\n        setActors(response.data.cast);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {actors.map(actor => (\n        <ul key={actor.id}>\n          <li key={actor.id}>\n            <img\n              className={css.actorImg}\n              src={`${baseApiUrl}${actor.profile_path}?api_key=${apiKey}`}\n              alt={actor.name}\n            />\n            <p className={css.actorText}>{actor.name}</p>\n            <p className={css.actorText}>Character: {actor.character}</p>\n          </li>\n        </ul>\n      ))}\n    </>\n  );\n}\nexport default Cast;\n"],"names":["movieId","axios","concat","_useState","useState","_useState2","_slicedToArray","actors","setActors","useParams","useEffect","Fetchcast","then","response","data","cast","catch","error","console","log","_jsx","_Fragment","children","map","actor","_jsxs","className","css","src","profile_path","alt","name","character","id"],"sourceRoot":""}