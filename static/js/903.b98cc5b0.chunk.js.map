{"version":3,"file":"static/js/903.b98cc5b0.chunk.js","mappings":"6MAIaA,EAAY,SAAHC,GAAoC,IAA9BC,EAAKD,EAALC,MAAOC,EAAeF,EAAfE,gBAC3BC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,EAAAA,UAAcC,UAC3BH,EAAAA,EAAAA,KAAA,MAAAG,UACEH,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CACHC,MAAO,CAAEC,KAAMR,GACfS,QAASV,EACTW,GAAE,WAAAC,OAAab,EAAMc,IAAKP,SAEzBP,EAAMe,WAKjB,C,0GCZA,MANA,SAAqBC,GACnB,OAAOC,EAAAA,EAAAA,IAAU,mDAADJ,OACqCG,EAAW,6CAElE,E,oCC6IA,EApIe,WACb,IAAAE,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CF,EAAWI,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAA0CJ,EAAAA,EAAAA,UAAS,MAAKK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEtCG,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAR,EAAAA,EAAAA,GAAAM,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAYF,EAAaG,IAAI,SA6F7BC,EAAa,WACZT,GAILA,EAAcU,KAAI,SAAAnC,GAAK,OAErB+B,EAAgB,CAAEjB,GAAId,EAAMc,IAAK,GAErC,EAEA,OACEsB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAA9B,SAAA,EACE6B,EAAAA,EAAAA,MAAA,QAAME,SAhEe,SAAAC,GACvBA,EAAEC,iBAEkB,KAAhBxB,GACFyB,EAAAA,GAAAA,KAAW,2BAA4B,CACrCC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAGXnB,GAAgB,SAAAoB,GACd,OAAOA,EAAa,CAAEC,MAAOpC,EAC/B,IA7CoB,KAAhBA,IAIJqC,QAAQC,IAAI,QAAStB,GAErBuB,EAAYvB,GACTwB,MAAK,SAAUC,GACuB,IAAjCA,EAASC,KAAKC,QAAQC,QACxBnB,EAAAA,GAAAA,MAAY,qBAAsB,CAChCC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,YAIXxB,EAAiB+B,EAASC,KAAKC,QACjC,IACCE,OAAM,SAAUC,GACfT,QAAQC,IAAIQ,EACd,IAuBJ,EA4CqCvD,SAAA,EAC/BH,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EAAAA,EAAAA,MACXQ,GAAG,QACHiD,SA1GiB,SAAAxB,GACvBjB,EAAeiB,EAAEyB,OAAOC,OACxBlC,EAAgB,CAAEqB,MAAOb,EAAEyB,OAAOC,OAKpC,KAqGM7D,EAAAA,EAAAA,KAAA,UAAQC,UAAWC,EAAAA,EAAAA,UAAcC,SAAC,cAGnCkB,GACCA,EAAcU,KAAI,SAAAnC,GAGhB,OAFAqD,QAAQC,IAAItD,EAAMe,QAGhBX,EAAAA,EAAAA,KAACN,EAAAA,EAAS,CAACoC,WAAYA,EAAYlC,MAAOA,GAAYA,EAAMc,GAEhE,MAGR,C,oBChJA,KAAgB,MAAQ,sBAAsB,UAAY,0BAA0B,UAAY,0B","sources":["components/MovieList/MovieList.jsx","components/FetchAPIs/fetchMovies.jsx","pages/Movies.jsx","webpack://react-homework-template/./src/components/styles/movies.module.css?b0d1"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport css from '../styles/movies.module.css';\nimport PropTypes from 'prop-types';\n\nexport const MovieList = ({ movie, onClickFunction }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.movieList}>\n      <li>\n        <Link\n          state={{ from: location }}\n          onClick={onClickFunction}\n          to={`/movies/${movie.id}`}\n        >\n          {movie.title}\n        </Link>\n      </li>\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movie: PropTypes.object,\n  onClickFunction: PropTypes.func,\n};\n","import axios from 'axios';\n\nfunction fetchMovies(searchQuery) {\n  return axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${searchQuery}&api_key=a42bf4f31f7d8fb3cfc076b340ef7462`\n  );\n}\n\nexport default fetchMovies;\n","import React from 'react';\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport fetchMovies from '../components/FetchAPIs/fetchMovies';\nimport { toast } from 'react-toastify';\n\nimport { MovieList } from '../components/MovieList/MovieList';\n\nimport 'toastify-js/src/toastify.css';\n\nimport '../components/movies.css';\n\nimport css from '../components/styles/movies.module.css';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [SearchedMovie, setSearchedMovie] = useState(null);\n\n  const [SearchParams, setSearchParams] = useSearchParams();\n  const MovieName = SearchParams.get('query');\n\n  // const visibleMovies = SearchedMovie.filter(item => item.includes(MovieName));\n\n  const handleInputValue = e => {\n    setSearchQuery(e.target.value);\n    setSearchParams({ query: e.target.value });\n\n    // location.state = e.target.value;\n\n    // setParams({ filter: e.target.value });\n  };\n\n  const fetchRequest = () => {\n    if (searchQuery === '') {\n      return;\n    }\n\n    console.log('query', MovieName);\n\n    fetchMovies(MovieName)\n      .then(function (response) {\n        if (response.data.results.length === 0) {\n          toast.error('No movies found :(', {\n            position: 'top-right',\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: 'colored',\n          });\n        }\n\n        setSearchedMovie(response.data.results);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    if (searchQuery === '') {\n      toast.info('Please enter movie name!', {\n        position: 'top-right',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'colored',\n      });\n    }\n    setSearchParams(prevParams => {\n      return prevParams + { query: searchQuery };\n    });\n\n    fetchRequest();\n  };\n\n  // useEffect(() => {\n  //   if (searchQuery === '') {\n  //     return;\n  //   }\n\n  //   console.log('query', MovieName);\n\n  //   fetchMovies(MovieName)\n  //     .then(function (response) {\n  //       if (response.data.results.length === 0) {\n  //         toast.error('No movies found :(', {\n  //           position: 'top-right',\n  //           autoClose: 3000,\n  //           hideProgressBar: false,\n  //           closeOnClick: true,\n  //           pauseOnHover: true,\n  //           draggable: true,\n  //           progress: undefined,\n  //           theme: 'colored',\n  //         });\n  //       }\n\n  //       setSearchedMovie(response.data.results);\n  //     })\n  //     .catch(function (error) {\n  //       console.log(error);\n  //     });\n  // }, [MovieName, searchQuery]);\n\n  const getMovieId = () => {\n    if (!SearchedMovie) {\n      return;\n    }\n\n    SearchedMovie.map(movie =>\n      // setParams({ filter: e.target.value });\n      setSearchParams({ id: movie.id })\n    );\n  };\n\n  return (\n    <>\n      <form onSubmit={handleFormSubmit}>\n        <input\n          className={css.input}\n          id=\"input\"\n          onChange={handleInputValue}\n        ></input>\n        <button className={css.searchBtn}>Search</button>\n      </form>\n\n      {SearchedMovie &&\n        SearchedMovie.map(movie => {\n          console.log(movie.title);\n\n          return (\n            <MovieList getMovieId={getMovieId} movie={movie} key={movie.id} />\n          );\n        })}\n    </>\n  );\n};\n\nexport default Movies;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"movies_input__NHKdu\",\"searchBtn\":\"movies_searchBtn__GVkCX\",\"movieList\":\"movies_movieList__U-mld\"};"],"names":["MovieList","_ref","movie","onClickFunction","location","useLocation","_jsx","className","css","children","Link","state","from","onClick","to","concat","id","title","searchQuery","axios","_useState","useState","_useState2","_slicedToArray","setSearchQuery","_useState3","_useState4","SearchedMovie","setSearchedMovie","_useSearchParams","useSearchParams","_useSearchParams2","SearchParams","setSearchParams","MovieName","get","getMovieId","map","_jsxs","_Fragment","onSubmit","e","preventDefault","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","prevParams","query","console","log","fetchMovies","then","response","data","results","length","catch","error","onChange","target","value"],"sourceRoot":""}